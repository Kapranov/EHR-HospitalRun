.modal-dialog
  .modal-content
    .modal-header.modal-header-sm
      p.title Edit User
    = render_messages
    = simple_form_for current_user.provider, html: { autocomplete: 'off' } do |p|
      = hidden_field_tag :authenticity_token, form_authenticity_token
      .modal-body
        .scrollable-container
          .content
            .row-container.main-info
              .row
                .col-lg-2.col-md-2.col-sm-2
                  .avatar
                    .attachment-container
                      - if gravatar?(current_user)
                        = gravatar_for(current_user, { class: 'avatar-image', alt: 'avatar' })
                      - else
                        - if current_user.provider.profile_image.present?
                          a.btn-attachment href="#"
                            img src="#{current_user.provider.profile_image.url}" class='avatar-image' alt='avatar'
                        - else
                          .avatar-hint
                            p.review-text File must be: JPG, PNG, GIF
                            p.maxsize-text Max Size: 1MB
                            p.minres-text Min. Res: 300x300 px.
                            a.btn.btn-attachment.btn-default
                              | Upload Photo
                        = p.file_field :profile_image
                .col-lg-10.col-md-10.col-sm-10
                  .row
                    .col-lg-4.col-md-4.col-sm-4
                      .form-group
                        = p.input_field :first_name, class: 'form-control', placeholder: 'First Name'
                    .col-lg-2.col-md-2.col-sm-2
                      .form-group
                        = p.input_field :middle_name, class: 'form-control', placeholder: 'M.I.'
                    .col-lg-4.col-md-4.col-sm-4
                      .form-group
                        = p.input_field :last_name, class: 'form-control', placeholder: 'Last Name'
                    .col-lg-2.col-md-2.col-sm-2
                      .form-group
                        = p.input_field :title, as: :select, collection: Provider.titles.map {|title| [title.to_s.titleize,title]}, selected: current_user.provider.title, class: 'select2', data: { placeholder: 'Title', theme: 'gray-lighter', arrow: '2x', padding: '1x', font: '1x' }
                  .row
                    .col-lg-2.col-md-2.col-sm-2
                      .form-group
                        = p.input_field :degree, as: :select, collection: Provider.degrees.map {|degree| ["#{degree.to_s.titleize == 'N/A Degree' ? 'N/A' : degree.to_s.titleize.upcase}",degree]}, selected: current_user.provider.degree, class: 'select2', data: { placeholder: 'Degree', theme: 'gray-lighter', arrow: '2x', padding: '1x', font: '1x'}
                    .col-lg-5.col-md-5.col-sm-5
                      .form-group
                        = p.input_field :speciality, as: :select, collection: Provider.specialities.map {|speciality| ["#{speciality.to_s.titleize == 'N/A Speciality' ? 'N/A' : speciality.to_s.titleize}",speciality]}, selected: current_user.provider.speciality, class: 'select2', data: { placeholder: 'Speciality', theme: 'gray-lighter', arrow: '2x', padding: '3x', font: '1x' }
                    .col-lg-5.col-md-5.col-sm-5
                      .form-group
                        = p.input_field :secondary_speciality, class: 'form-control', placeholder: 'Secondary speciality'
              .row
                .col-lg-3.col-md-3.col-sm-3
                  .form-group
                    = p.input_field :dental_licence, class: 'form-control', placeholder: 'Dental Licence #'
                .col-lg-6.col-md-6.col-sm-6
                  .row
                    .col-lg-3.col-md-3.col-sm-3
                      .form-group
                        = p.input_field :state, class: 'form-control', placeholder: 'State', disabled: :disabled
                    .col-lg-9.col-md-9.col-sm-9
                      .form-group
                        .input-group
                          = p.text_field :expiration_date_date, class: 'form-control date-picker', placeholder: 'Expiration Date'
                          span.input-group-addon.input-group-addon-calendar
                .col-lg-3.col-md-3.col-sm-3
                  .form-group
                    = p.input_field :ein_tin, class: 'form-control', placeholder: 'EIN/TIN'
              .row
                .col-lg-3.col-md-3.col-sm-3
                  .form-group
                    = p.input_field :npi, class: 'form-control', placeholder: 'NPI'
                .col-lg-3.col-md-3.col-sm-3
                  .form-group
                    = p.input_field :dea, class: 'form-control', placeholder: 'DEA'
                .col-lg-3.col-md-3.col-sm-3
                  .form-group
                    = p.input_field :upin, class: 'form-control', placeholder: 'UPIN'
                .col-lg-3.col-md-3.col-sm-3
                  .form-group
                    = text_field_tag :clinician_id, current_user.provider.user.id, class: 'form-control', placeholder: 'Clinitian ID/User ID', disabled: 'disabled'
              .row
                .col-lg-3.col-md-3.col-sm-3
                  .form-group
                    = p.input_field :nadean, class: 'form-control', placeholder: 'NADEAN'
            .row-container.online-profile-and-booking
              .category-header
                p.title Online Profile and Appointment Booking
              .online-profile-content
                .row
                  .col-lg-4.col-md-4.col-sm-4
                    .form-group
                      = p.input_field :active, as: :select, collection: [['Active', true], ['Inactive', false]], selected: current_user.provider.active, class: 'select2', data: { placeholder: 'Status', theme: 'gray-lighter', arrow: '2x', padding: '3x', font: '1x' }
                    .form-group
                      .checkbox-custom
                        = p.check_box :accepting_patient, label: false, id: 'accepting-new-patients'
                        label[for="accepting-new-patients"]
                          span.checkbox-icon-container
                            span.checkbox-icon
                          span.checkbox-label Accepting new patients
                    .form-group
                      .checkbox-custom
                        = p.check_box :enable_online_booking, label: false, id: 'enable-online-booking'
                        label[for="enable-online-booking"]
                          span.checkbox-icon-container
                            span.checkbox-icon
                          span.checkbox-label Enable online Appt Booking
                  .col-lg-8.col-md-8.col-sm-8
                    .form-group
                      = p.input_field :biography, as: 'text', class: 'form-control', rows: 6, placeholder: 'Biography'
            .row-container.practice-location
              .bordered-container
                .category-header
                  .row
                    .col-lg-10.col-md-10.col-sm-10
                      p.title Practice Location and Provider Schedule
                    .col-lg-2.col-md-2.col-sm-2
                      = link_to form_locations_path(opened_from_practice: true), class: 'btn-small btn-modal', id: 'myaccount-add-practice-location', data: { target: '#modal-settings-add-edit-location-practice' }, remote: true
                        i.fa.fa-plus
                .practice-location-content
                  .table-responsive
                    table.table
                      thead
                        tr
                          th
                            p Location Name
                          th
                            p City, State
                          th
                            p Provider Schedule
                          th
                            p Primary Location?
                      tbody
                        - current_user.provider.main_provider.locations.each do |location|
                          tr
                            td
                              p
                                = "#{location.location_name}, #{location.location_address}"
                            td
                              p
                                = "#{location.city}, #{location.state}"
                            td
                              - location.time_ranges_with_days.each do |range|
                                p
                                  = range
                            td
                              .checkbox-custom
                                = check_box_tag "location_#{location.id}", '', location.id == current_user.provider.location.try(:id), class: 'checkbox primary_location', data: { id: location.id }
                                label[for="location_#{location.id}"]
                                  span.checkbox-icon-container
                                    span.checkbox-icon
            .row-container.userlogin-info
              .category-header
                p.title User Login Info
              .userlogin-info-content
                .row.first-row
                  .col-lg-7.col-md-7.col-sm-7
                    .row
                      .col-lg-6.col-md-6.col-sm-6
                        .form-group
                          = p.input_field :username, class: 'form-control', placeholder: 'Username'
                      .col-lg-6.col-md-6.col-sm-6
                        .form-group
                          = p.input_field :practice_role, as: :select, collection: Provider.practice_roles.to_a, selected: current_user.provider.practice_role, class: 'select2', data: { placeholder: 'Speciality', theme: 'gray-lighter', arrow: '2x', padding: '3x', font: '1x' }
                  .col-lg-5.col-md-5
                    .row
                      .col-lg-6.col-md-6
                        .form-group
                          .checkbox-custom
                            = p.check_box :active, readonly: 'readonly', disabled: 'disabled', id: 'user_active'
                            label[for="user_active"] 
                              span.checkbox-icon-container
                                span.checkbox-icon
                              span.checkbox-label Active
                      .col-lg-6.col-md-6
                        .form-group
                          = link_to 'Change Password', edit_user_registration_path(id: current_user.provider), class: 'btn btn-default btn-modal', remote: true, data: { target: '#modal-edit-user' }
                .row.second-row
                  .col-lg-7.col-md-7
                    .row
                      .col-lg-6.col-md-6
                        = p.simple_fields_for :user, current_user do |u|
                          = u.input_field :id, as: :hidden, value: current_user.id
                          .form-group
                            = u.input_field :email, as: :email, class: 'form-control input-email', placeholder: 'Personal Email'
                      .col-lg-6.col-md-6
                        .form-group
                          .input-group.input-group-phone
                            = p.input_field :primary_phone_code, as: :select, collection: ((current_user.provider.persisted? && current_user.provider.primary_phone_code.present?) ? [current_user.provider.primary_phone_code] : []), class: 'select2 input-phone-code', data: { placeholder: '(      )', theme: 'gray-lighter', arrow: 'none', padding: '1x', font: '1x', width: '76px', 'text-align': 'center', search: true, 'search-input': true }, include_blank: false
                            = p.input_field :primary_phone_tel, as: :tel, class: 'form-control input-phone', placeholder: 'Personal Phone'
                  - if !current_user.provider.emergency_access?
                    .col-lg-5.col-md-5
                      .form-group.pull-right
                        = link_to 'Request Emergency Access', request_emergency_access_providers_path, class: 'btn btn-danger btn-modal btn-padding-md', data: { target: '#modal-request-emergency-access' }, remote: true
      .modal-footer
        .controls
          = p.submit 'Save Changes', class: 'btn btn-default'
          a.btn.btn-default.btn-padding-sm data-dismiss="modal" Cancel